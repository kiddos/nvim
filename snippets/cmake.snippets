snippet template
	cmake_minimum_required(VERSION ${1:3.0})
	project(${2:ProjectName})

	set(CMAKE_CXX_COMPILER "clang++")
	set(CMAKE_CXX_STANDARD ${3:17})
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
	set(CMAKE_CXX_FLAGS_DEBUG "-g -O0")
	set(CMAKE_CXX_FLAGS_RELEASE "-O3")
	set(BUILD_SHARED_LIBS ON)

	if (NOT CMAKE_BUILD_TYPE)
		set(CMAKE_BUILD_TYPE Debug)
	endif ()

	add_subdirectory(src)
	enable_testing()
	add_subdirectory(test)
snippet external_gtest
	########################### GTEST
	# Enable ExternalProject CMake module
	include(ExternalProject)

	# Set default ExternalProject root directory
	set_directory_properties(PROPERTIES EP_PREFIX ${CMAKE_BINARY_DIR}/third_party)

	# Add gtest
	# http://stackoverflow.com/questions/9689183/cmake-googletest
	ExternalProject_Add(
		googletest
		URL https://github.com/google/googletest/archive/release-1.13.0.zip
		TIMEOUT 10
		# Disable install step
		INSTALL_COMMAND ""
		# Wrap download, configure and build steps in a script to log output
		LOG_DOWNLOAD ON
		LOG_CONFIGURE ON
		LOG_BUILD ON)

	# Specify include dir
	ExternalProject_Get_Property(googletest source_dir)
	set(GTEST_INCLUDE_DIR ${source_dir}/googletest/include)

	# Library
	ExternalProject_Get_Property(googletest binary_dir)
	set(GTEST_LIBRARY_PATH ${binary_dir}/googlemock/gtest/${CMAKE_FIND_LIBRARY_PREFIXES}gtest.a)
	set(GTEST_LIBRARY gtest)
	add_library(${GTEST_LIBRARY} UNKNOWN IMPORTED)
	set_property(TARGET ${GTEST_LIBRARY} PROPERTY IMPORTED_LOCATION
				${GTEST_LIBRARY_PATH})
	add_dependencies(${GTEST_LIBRARY} googletest)

	include_directories("${CMAKE_SOURCE_DIR}/src")
	include_directories(${GTEST_INCLUDE_DIR})

##
## Download
snippet download_numpy
	if (NOT EXISTS ./numpy.i)
		message(STATUS "Downloading numpy.i from github.com...")
		file(DOWNLOAD
			https://raw.githubusercontent.com/numpy/numpy/master/tools/swig/numpy.i
			./numpy.i EXPECTED_MD5 7ace9cd48149759e03624dae78cf2216 SHOW_PROGRESS)
	endif ()
